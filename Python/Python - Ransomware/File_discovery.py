import os
#PathDiscover
def discover(initial_path):

    #Attack Extensions
    extensions = [
        #'exe,', 'dll', 'so', 'rpm', 'deb', 'vmlinuz', 'img'  # Arquivos do Sitema
        #'jpg', 'jpeg', 'bmp', 'gif', 'png', 'svg', 'psd', 'raw',  # imagens
        #'mp3', 'mp4', 'm4a', 'aac', 'ogg', 'flac', 'wav', 'wma', 'aiff', 'ape',  # Audios
        #'avi', 'flv', 'm4v', 'mkv', 'mov', 'mpg', 'mpeg', 'wmv', 'swf', '3gp',  # Vídeos
        #'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx',  # Microsoft office
        #'odt', 'odp', 'ods', 'txt', 'rtf', 'tex', 'pdf', 'epub', 'md',# OpenOffice, Adobe, Latex, Markdown, etc
        #'yml', 'yaml', 'json', 'xml', 'csv',  # dados estruturados e config
        #'db', 'sql', 'dbf', 'mdb', 'iso',  # bancos de dados e imagens de disco
        #'html', 'htm', 'xhtml', 'php', 'asp', 'aspx', 'js', 'jsp', 'css'  # tecnologias web
        #'c', 'cpp', 'cxx', 'h', 'hpp', 'hxx',  # Código fonte C e C++
        #'java', 'class', 'jar'  # Códigos fonte Java
        #'ps', 'bat', 'vb',  # Scripts de sistemas windows
        #'awk', 'sh', 'cgi', 'pl', 'ada', 'swift',  # Scripts de sistemas unix
        #'go', 'py', 'pyc', 'bf', 'coffee',  # Outros tipos de códigos fonte
        #'zip', 'tar', 'tgz', 'bz2', '7z', 'rar', 'bak', # Arquivos compactados e Backups
        'txt', 'xml', 'json', 'csv'
    ]

    #Walk dirs, subdirs and files using os.walk_path
    for dirpath, dirs, files in os.walk(initial_path):
        #Select all files in dir
        for _file in files:
            #Collect abspath
            abspath = os.path.abspath(os.path.join(dirpath, _file))
            #Collect extension, following last array item to bypass files with example.example.extension 
            ext = abspath.split('.')[-1]
            #Verify if the extension needs to be attacked 
            if ext in extensions:
                #Yield run as return, but continuous excecute loop
                yield abspath
#Test purpose
if __name__ == '__main__':
    x = discover(os.getcwd())
    for i in x:
        print(i)