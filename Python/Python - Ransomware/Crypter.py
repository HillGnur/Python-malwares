def cryptFiles(filename, crytoFn, block_size=16):
    #Open archive as binary read
    with open(filename, 'r+b') as _file:
        raw_value = _file.read(block_size)
        #While values are equals to plain blocks, the cryptoFn still executes
        while raw_value:
            #Cypher a block
            cipher_value = crytoFn(raw_value)

            #Compare blocks size (cypherblock and plaintext)
            if len(raw_value) != len(cipher_value):
                raise ValueError('The cypher value {} has a different size than plain value {}'.format(len(cipher_value), len(raw_value)))
            
            #seek - come back to point 0 of the file
            _file.seek(-len(raw_value), 1)
            #Rewrite the archive by point 0 with cypher value
            _file.write(cipher_value)
            #Rewrite the plain value to cypher value
            raw_value = _file.read(block_size)